# -*- coding: utf-8 -*-
"""Library Management System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/101ZF3ES5sVgZBuOmPQOX5Aaf8Xnevp8O
"""

import openpyxl

class Library:
    def __init__(self, filename):
        self.filename = filename
        try:
            self.file = open(self.filename, 'a+')
            print(f"File '{self.filename}' opened successfully.")
        except FileNotFoundError:
            print(f"Error: File '{self.filename}' not found.")

    def __del__(self):
        if hasattr(self, 'file'):
            self.file.close()
            print(f"File '{self.filename}' closed.")

def add_book():
    print("Kitap ekleme komutundasınız. Lütfen formata uygun şekilde veri girişi yapınız.")
    print("Veri girişi formatı şu şekilde olmalıdır: [kitap adı, yazar, yayın tarihi, sayfa sayısı]\n")

    book_name = input("Kitap adını girin: ")
    if not book_name.replace(" ", ""):

        return None, None, None, None

    author = input("Yazar adını girin: ")
    if not author.replace(" ", ""):
        return None, None, None, None

    release_date = input("Yayın tarihini girin: ")
    if not release_date.isdigit():
        print("Hata: Yayın tarihi tam sayı olmalıdır.")
        return None, None, None, None

    number_of_pages = input("Sayfa sayısını girin: ")
    if not number_of_pages.isdigit():
        print("Hata: Sayfa sayısı tam sayı olmalıdır.")
        return None, None, None, None

    # Yeni kitabı dosyaya ekleme
    with open("books.txt", "a") as file_of_books:
        file_of_books.write(f"{book_name}, {author}, {release_date}, {number_of_pages}\n")

    return book_name, author, int(release_date), int(number_of_pages)

def remove_book():

    be_deleted_book = input("Kütüphaneden kaldırmak/silmek istediğiniz kitabın adını giriniz: ")


    book_list = []
    with open("books.txt", "r") as file_of_books:
        for line in file_of_books:
            book_list.append(line.strip())

    # Silinecek kitabın indexini bulma
    index_to_delete = None
    for i, book in enumerate(book_list):
        if be_deleted_book in book:
            index_to_delete = i
            break

    if index_to_delete is not None:
        # Kitabı listeden kaldırma
        removed_book = book_list.pop(index_to_delete)
        print(f"'{be_deleted_book}' adlı kitap başarıyla kütüphaneden kaldırıldı.")

        # books.txt nin içindekileri silme
        with open("books.txt", "w") as file_of_books:
            file_of_books.write("")

        # listedekileri books.txt ye yazdırma
        with open("books.txt", "a") as file_of_books:
            for book in book_list:
                file_of_books.write(book + "\n")
    else:
        print(f"Hata: '{be_deleted_book}' adlı kitap kütüphanede bulunamadı.")

def list_books():
    counter = 1
    try:
        with open("books.txt", "r") as file_of_books:
            datas = file_of_books.readlines()
            if datas:
                for data in datas:
                    print(f"\n{counter}. [{data.strip()}]")
                    counter += 1
            else:
                print("Kütüphanede hiç kitap bulunmamaktadır.")
    except FileNotFoundError:
        print("Hata: 'books.txt' dosyası bulunamadı.")

lib = Library("books.txt")

# Menü bölümü.
ans = True
while ans:
    print("""
    1. Kitapları Listele
    2. Kitap Ekle
    3. Kitap Sil
    Q. Çıkış ("Çıkmak için Q'ya basın.")
    """)
    ans = input("Ne yapmak istersiniz?\n")
    if ans == "1":
        list_books()
        print("\nKitaplar listelendi.")
    elif ans == "2":
        kitap_adi, yazar, yayin_tarihi, sayfa_sayisi = add_book()
        if kitap_adi is not None:
            print("\nEklemek istediğiniz kitap:\n- Kitap Adı:", kitap_adi, "\n- Yazar:", yazar, "\n- Yayın Tarihi:", yayin_tarihi, "\n- Sayfa Sayısı:", sayfa_sayisi)
    elif ans == "3":
        remove_book()
    elif ans.upper() == "Q":
        print("\nİyi günler!")
        break
    elif ans != "":
        print("\nGeçersiz seçim. Lütfen tekrar deneyin.")